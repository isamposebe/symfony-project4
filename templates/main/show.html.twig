{% extends 'base.html.twig' %}

{% block title %}New Team{% endblock %}

{% block body %}
    <h1>Show</h1>
    <button onclick="window.location='{{ path('app_main') }}'">Главная</button>


    <script>
        {# Отправка POST запроса записи команды #}
        $( ".recordingTeam" ).click(function() {
            let nameTeam = $(".nameTeam").val();
            let tournamentID = $('#tournamentId').data( "tournament");
            $.ajax({
                url: '/tournament/addTeamTournament/', // не менял
                method: 'POST',
                dataType: 'html',
                data: {nameTeam: nameTeam, tournamentID: tournamentID}, // Отправляю через data
                success: function (data) {
                    $('#divNewTeam').replaceWith(data);
                    console.log($('#divNewTeam').html());
                }
            });
        });

        {# Удаление игры #}
        $( '.deleteGame' ).click(function() {
            let tourID = $(this).data('tour');
            let gameID = $(this).data('game');
            console.log(gameID);
            $.ajax({
                url: '/game/delete/', // не менял
                method: 'POST',
                dataType: 'html',
                data: {gameID: gameID, tourID: tourID}, // Отправляю через data
                success: function (data) {
                    // Стираем из формы
                    $('tr')
                        .filter(function (){
                            return $(this).data('game') == data;
                        })
                        .remove()
                    console.log(data);
                }
            });
        });

        {# Переход на следующий тур #}
        $( ".addTour" ).click(function() {
            let tourID = $('#tourId').data("tour");
            $.ajax({
                url: '/tournament/addTour/', // не менял
                method: 'POST',
                dataType: 'html',
                data: {tourID: tourID}, // Отправляю через data
                success: function (data) {
                    console.log(data);
                    $('#eorrGen').replaceWith("<p>" + data + "</p>");
                }
            });
        });

        {# Отсеживание ошибок ajax #}
        $(document).ajaxError(function(event, xhr, options) {

            switch (xhr.status){

                case 403:

                    alert('Requested page forbidden (404).');

                    break;

                case 404:

                    alert('Requested page not found (404).');

                    break;

                case 500:

                    alert('Internal Server Error (500).');

                    break;

            }

        });
    </script>
{% endblock %}
